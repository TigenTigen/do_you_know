"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import socket
from .get_secret import get_secret

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_secret(os.getenv('DJANGO_SK_FILE'))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

CONTAINER_IP = socket.gethostbyname(socket.gethostname())
ALLOWED_HOSTS = ['apache', os.getenv('HOST_NAME'), os.getenv('HOST_IP')]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': get_secret(os.getenv('POSTGRES_DB_FILE')),
        'USER': get_secret(os.getenv('POSTGRES_USER_FILE')),
        'PASSWORD': get_secret(os.getenv('POSTGRES_PASSWORD_FILE')),
        'HOST': 'postgres',
        'PORT': '5432',
        'ATOMIC_REQUEST': True,
        }
    }

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'Asia/Krasnoyarsk'

USE_I18N = True

USE_L10N = False # disable datetime and numeric internationalization

USE_TZ = True

# Параметры ввода и вывода дат: задано вручную (при отключении USE_L10N)
DATE_FORMAT = "d.m.Y"
DATE_INPUT_FORMATS = ['%d.%m.%Y']
SHORT_DATE_FORMAT = "d.m.Y"

DATETIME_FORMAT = "d.m.Y H:i:s"
DATETIME_INPUT_FORMATS = ["%d.%m.%Y %H:%M:%S"]
SHORT_DATETIME_FORMAT = "d.m.Y H:M:s"

TIME_FORMAT = "H:M"
TIME_INPUT_FORMATS = ["%H:%M"]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# crispy_forms settings:
INSTALLED_APPS += ['crispy_forms',]
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# user settings
INSTALLED_APPS = ['user.apps.UserConfig',] + INSTALLED_APPS
AUTH_USER_MODEL = 'user.AdvUser'
LOGIN_URL = 'user:login' # адрес, ведущий на страницу входа
LOGIN_REDIRECT_URL = 'main_page' # адрес, на который произойдет перенаправление после входа
LOGOUT_REDIRECT_URL = 'main_page' # адрес, на который произойдет перенаправление после выхода
                           # если None, перенаправление не произойдет, будет выведена страница выхода с сайта

# Mail settings (for registration confirmation emails)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = get_secret(os.getenv('DJANGO_EH_FILE'))
EMAIL_HOST_USER = get_secret(os.getenv('DJANGO_EHU_FILE'))
EMAIL_HOST_PASSWORD = get_secret(os.getenv('DJANGO_EHP_FILE'))
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'noreply@do_you_know.com'
MAILING_LIST_LINK_DOMAIN = 'http://' + ALLOWED_HOSTS[0]

# social-django settings
INSTALLED_APPS += ['social_django',]
SOCIAL_AUTH_POSTGRES_JSONFIELD = True
TEMPLATES[0]['OPTIONS']['context_processors'].append('social_django.context_processors.backends')
TEMPLATES[0]['OPTIONS']['context_processors'].append('social_django.context_processors.login_redirect')
AUTHENTICATION_BACKENDS = (
    'social_core.backends.vk.VKOAuth2',                 # for vk
    'social_core.backends.google.GoogleOAuth2',         # for google
    'social_core.backends.github.GithubOAuth2',         # for github
    'django.contrib.auth.backends.ModelBackend',
)
SOCIAL_AUTH_LOGIN_REDIRECT_URL = 'http://li2051-57.members.linode.com'
SOCIAL_AUTH_SANITIZE_REDIRECTS = False
USE_X_FORWARDED_HOST = True

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.social_auth.associate_by_email',  # <--- enable email super uniqueness
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

# ... for vk:
SOCIAL_AUTH_VK_OAUTH2_KEY = '7093319'
SOCIAL_AUTH_VK_OAUTH2_SECRET = 's6mUCsqlFYVYLXIlN4EJ'
SOCIAL_AUTH_VK_OAUTH2_SCOPE = ['email']

# ... for google:
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '577047278879-nud66sl0gadqf63sf4sdkg91svpii3ok.apps.googleusercontent.com'
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = 'mRq8xGDyY6yoIMY4wZvMmejp'
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = ['email']

# ... for github:
SOCIAL_AUTH_GITHUB_KEY = 'e6d53309e8b0f5004e8c'
SOCIAL_AUTH_GITHUB_SECRET = 'f5f580b49c4241354c2c0bf7b1ef053afa518cf9'
SOCIAL_AUTH_GITHUB_SCOPE = ['email']

# core settings:
INSTALLED_APPS = ['core.apps.CoreConfig',] + INSTALLED_APPS

# django-selectable settings:
INSTALLED_APPS += ['selectable',]

# img settings
INSTALLED_APPS += ['img.apps.ImgConfig', 'django_cleanup', 'easy_thumbnails', ]
MEDIA_ROOT = '/var/www/media/'
MEDIA_URL = '/media/'
THUMBNAIL_BASEDIR = 'thumbnails'
THUMBNAIL_ALIASES = {
    '': {
        'default': {
            'size': (0, 100),
            'crop': 'scale',
            'autocrop': True,
        },
        'cover_lg': {
            'size': (200, 0),
            'crop': 'scale',
            'autocrop': True,
        },
        'cover_sm': {
            'size': (150, 0),
            'crop': 'scale',
            'autocrop': True,
        },
    },
}

# contacts settings
INSTALLED_APPS += ['contacts.apps.ContactsConfig', ]
